Object - Objects have states ad behaviors. Ex: dog has states: color, name, bread.

Class - Defined as a template/bueprint that descfibes the behaviors/states that object of its type support

Methods - Method is a behavior.

Instance variables - Each object has its unique se of instance variables. An object's state is created by the values assigned to these instance variables.

namespace - declarative region that provides a scope to the identifiers (names of types, functions, variables, ect) inside it. Namespaces are used to organize code into logical groups and to prvent name collisions that occur when your code base includes multiple libaries.

Data types (sizes in bytes):
	Size of char : 1
	Size of int : 4
	Size of short int : 2
	Size of long int : 4
	Size of float : 4
	Size of double : 8
	Size of wchar_t : 4

typedef declarations - Create a new name for an existinng type.

Enumerated Types - Declares an optional type name and identifiers that can be used as values of the type
	-Each identifiers value is a constant whose type is the enumeration (0,1,2,3..).

Qualifier/Modifer: Allows data types to have modifiers preceding them. Allows to use the alter of the base meaning. In other words, indicate what size of number to store inside your int. Data type modifiers are:
	signed - specifies whether a variable can hold a negative value
	unsigned - specifies whether a variable can hold a positive value ONLY
	long - store a single 64-bit signed integer value
	short - stores a single 32-bit integer value
	const - defines the type is constant
	volatile - special properties related to optimization and/or threading

I/O Streams - Squences of bytes 